server {
  host = "0.0.0.0"
  host = ${?SM_HOST}
  port = 9082
  port = ${?SM_PORT}
  startup.timeout = 5000
}

# REST API prefix
session-api {
  prefix = "v1/sessions"
}

session-service {
  timeout = 10000
}

status-inference {
  heartbeat {
    # Expected Heartbeat interval (in seconds)
    interval = 1
    # How many Heartbeat can be missing before assuming broken Executor
    missing-count = 20
  }

  # How long (in seconds) it can take before Executor sends Heartbeats after spawning.
  # After this time we assume Executor is broken.
  startup.duration = 120
}

queue {
  host = "localhost"
  host = ${?SM_MQ_HOST}
  port = "5672"
  port = ${?SM_MQ_PORT}
  user = "guest"
  user = ${?MQ_USER}
  pass = "guest"
  pass = ${?MQ_PASS}

  # How long (in millis) can the subscription to Heartbeats take
  heartbeat.subscription.timeout = 30000
}

session-executor {

  spark-applications-logs-dir = "/tmp/deepsense/seahorse/spark-applications-logs"
  spark-applications-logs-dir = ${?SPARK_APPLICATIONS_LOGS_DIR}

  # Parameters used to spawn Session Executor process
  parameters {
    class-name = "io.deepsense.workflowexecutor.WorkflowExecutorApp"

    application-jar-path = ${?SESSION_EXECUTOR_PATH}
    deps-zip-path = ${?SESSION_EXECUTOR_DEPS_PATH}

    spark-home-path = ${?SPARK_HOME}

    temp-dir = "/tmp/seahorse/download"
    temp-dir = ${?TEMP_DIR}

    python-driver-binary = "/opt/conda/bin/python"
    python-driver-binary = ${?PYTHON_DRIVER_BINARY}
    python-executor-binary = "python"
    python-executor-binary = ${?PYTHON_EXECUTOR_BINARY}

    queue {
      port = "5672"
      port = ${?MQ_PORT}
      user = "guest"
      user = ${?MQ_USER}
      pass = "guest"
      pass = ${?MQ_PASS}
    }

    workflow-manager {
      scheme = "http"
      scheme = ${?WM_SCHEME}
      port = "9080"
      port = ${?WM_PORT}
      username = "Some_User"
      username = ${?WM_AUTH_USER}
      password = "Some_Password"
      password = ${?WM_AUTH_PASS}
    }

  }
}

eventstore.table = "SESSIONS"

db = {
  url = "jdbc:h2:tcp://database:1521/sessionmanager;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1"
  url = ${?JDBC_URL}
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}
