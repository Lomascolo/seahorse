# Copyright (c) 2015, CodiLime Inc.

---
- name: Builds {{ds_spark_docker_image}} docker image
  hosts: localhost
  vars_files:
    - vars/spark.yml
  vars:
    docker_dir: "/tmp/docker-ansible"
  roles:
    - spark

- name: Exports {{ds_spark_docker_image}} docker image
  hosts: localhost
  vars_files:
    - vars/spark.yml
  tasks:
    - include: tasks/save_docker_image.yml docker_image={{ds_spark_docker_image}} download_dir="{{ds_spark_download_dir}}"

- name: Copies {{ds_spark_docker_image}} docker image
  hosts: spark-cluster
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/spark.yml
  tasks:
    - name: Assures docker dir exists
      file: path={{ds_spark_download_dir}} state=directory
    - include: tasks/copy_docker_image.yml docker_tar_image={{ds_spark_docker_image}}-docker.tar docker_dir={{ds_spark_download_dir}} download_dir="{{ds_spark_download_dir}}"

- name: Imports {{ds_spark_docker_image}} docker image
  hosts: spark-cluster
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/spark.yml
  tasks:
    - include: tasks/load_docker_image.yml docker_image={{ds_spark_docker_image}} docker_dir={{ds_spark_download_dir}}


- name: Runs {{ds_spark_docker_image}} docker image on slaves
  hosts: slaves
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/spark.yml
  tasks:
    - name: Register running Docker containers
      register: docker_containers
      command: docker ps -a

    - name: Remove previous container
      command: docker rm -f {{ds_spark_docker_image}}
      when: docker_containers.stdout.find('{{ds_spark_docker_image}}') != -1

    - name: Run {{ds_spark_docker_image}} container
      command: >
        docker run --restart=always -d
          --net=host
          -v /opt/spark
          -v /etc/hosts:/tmp/hosts.orig:ro
          -e ENV_PREFIX={{env_prefix}}
          -e IS_MASTER=0
          -e NUMBER_OF_SLAVES="{{ groups['slaves'] | length }}"
          --name {{ds_spark_docker_image}} {{ds_spark_docker_image}}

- name: Runs {{ds_spark_docker_image}} docker image on master
  hosts: master
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/spark.yml
  tasks:
    - name: Register running Docker containers
      register: docker_containers
      command: docker ps -a

    - name: Remove previous container
      command: docker rm -f {{ds_spark_docker_image}}
      when: docker_containers.stdout.find('{{ds_spark_docker_image}}') != -1

    - name: Run {{ds_spark_docker_image}} container
      command: >
        docker run --restart=always -d
          --net=host
          -v /opt/spark
          -v /etc/hosts:/tmp/hosts.orig:ro
          -e ENV_PREFIX={{env_prefix}}
          -e IS_MASTER=1
          -e NUMBER_OF_SLAVES="{{ groups['slaves'] | length }}"
          --name {{ds_spark_docker_image}} {{ds_spark_docker_image}}
