# Copyright (c) 2015, CodiLime Inc.

---
- name: Builds frontend-proxy docker images
  hosts: localhost
  vars_files:
    - vars/frontend-proxy.yml
  vars:
    docker_dir: "/tmp/docker-ansible"

  roles:
    - nodejs
    - frontendproxy

- name: Exports frontend-proxy docker image
  hosts: localhost
  vars_files:
    - vars/frontend-proxy.yml
  tasks:
    - include: tasks/save_docker_image.yml docker_image={{ds_frontend_proxy_docker_image}} download_dir="{{ds_frontend_proxy_download_dir}}"

- name: Copies frontend-proxy docker image
  hosts: frontend
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/frontend-proxy.yml
  tasks:
    - name: Assures docker dir exists
      file: path={{ds_frontend_proxy_download_dir}} state=directory
    - include: tasks/copy_docker_image.yml docker_tar_image={{ds_frontend_proxy_docker_image}}-docker.tar docker_dir={{ds_frontend_proxy_download_dir}} download_dir="{{ds_frontend_proxy_download_dir}}"

- name: Imports frontend-proxy docker image
  hosts: frontend
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/frontend-proxy.yml
  tasks:
    - include: tasks/load_docker_image.yml docker_image={{ds_frontend_proxy_docker_image}} docker_dir={{ds_frontend_proxy_download_dir}}

- name: Runs frontend-proxy image
  hosts: frontend
  user: ubuntu
  sudo: yes
  vars_files:
    - vars/frontend-proxy.yml
  vars:
    frontend_proxy_port: "8001"
  tasks:
    - name: Register running Docker containers
      register: docker_containers
      command: docker ps -a

    - name: Remove previous container
      command: docker rm -f ds-frontend-proxy
      when: docker_containers.stdout.find(' ds-frontend-proxy ') != -1

    - name: Run frontend-proxy container
      docker:
        name: "{{ds_frontend_proxy_docker_image}}"
        image: "{{ds_frontend_proxy_docker_image}}"
        state: started
        restart_policy: always
        ports:
          - "{{frontend_proxy_port}}:8001"
        env:
          ES_ENDPOINT: "{{entitystorage_endpoint}}"
          WM_ENDPOINT: "{{workflowmanager_endpoint}}"
          KEYSTONE_ENDPOINT: "{{keystone_endpoint}}"
