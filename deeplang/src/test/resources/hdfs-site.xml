<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Copyright (c) 2015, CodiLime Inc.

  Hadoop cluster configuration for Development Environment
-->
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>

  <property>
    <name>dfs.replication</name>
    <value>1</value>
    <description>
      Default block replication. The actual number of replications can be specified
      when the file is created. The default is used if replication is not specified in create time.
    </description>
  </property>
  <property>
    <name>dfs.permissions.enabled</name>
    <value>false</value>
    <description>
      If "true", enable permission checking in HDFS.
      If "false", permission checking is turned off, but all other behavior is unchanged.
      Switching from one parameter value to the other does not change the mode,
      owner or group of files or directories.
    </description>
  </property>
  <property>
    <name>dfs.permissions</name>
    <value>false</value>
    <description>
      If yes use the permissions system as described here. If no, permission checking is turned off,
      but all other behavior is unchanged.
      Switching from one parameter value to the other does not change the mode,
      owner or group of files or directories.
      Regardless of whether permissions are on or off,
      chmod, chgrp and chown always check permissions.
      These functions are only useful in the permissions context,
      and so there is no backwards compatibility issue.
      Furthermore, this allows administrators to reliably set owners and permissions in advance of
      turning on regular permissions checking.
    </description>
  </property>
  <property>
    <name>dfs.client.use.datanode.hostname</name>
    <value>true</value>
    <description>Whether clients should use datanode hostnames when
      connecting to datanodes.
      It is necessary when datanode is reachable from client via floating IP.
    </description>
  </property>
</configuration>
